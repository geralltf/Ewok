using System;
using System.IO;

namespace Ewok.Machine.Asm.S19 {
    public class Assembler {
        public Assembler() {

        }

        /// <returns>
        /// Returns the full path to the assembled binary
        /// </returns>
        public string assemble(string code) {
            string tempFile=Path.GetTempFileName();
            string asmFile=tempFile+".asm.tmp";
            string errors;
            string s19File;
            FileInfo fiApp;
            string appPath;

            fiApp=new FileInfo(System.Reflection.Assembly.GetExecutingAssembly().Location);
            appPath=fiApp.Directory.FullName;

            asmFile=appPath+"\\"+(new FileInfo(asmFile)).Name;

            if(File.Exists(asmFile)) {
                File.Delete(asmFile);
            }
            File.WriteAllText(asmFile,code);

            s19File=assembleFile(asmFile,out errors);
            //if(File.Exists(asmFile)) {
                //File.Delete(asmFile);
            //}
            if(File.Exists(s19File+".lst")) {
                File.Delete(s19File+".lst");
            }

            if(!File.Exists(s19File+".s19")) {
                if(errors.Contains("COMPILATION ERRORS")) {
                    throw new Exception(errors);
                }
                else {
                    throw new Exception("s19 file not generated by assembler");
                }
            }

            return s19File;
        }

        /// <returns>
        /// The full path to the assembled binary
        /// </returns>
        public string assembleFile(string fileInput,out string errors) {
            return Program.Compile(fileInput,out errors);
        }
    }
}
